<!DOCTYPE html>
<!-- Thanks verify.ly! -->
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
  <head>
	<title>CoveredCI ~ more info</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="description" content="">
	<meta name="author" content="">
	<link rel="stylesheet" type="text/css" href="/sttc/style.css" media="all"/>

    <style>
      body { margin-top:20px; background:#000; }
      .page-header { border-bottom: 1px solid #111; }
      h1,h3 { color:#ccc; }
      p { color:#aaa; }
      .active_nav_href { text-decoration: none !important; }
    .navbar-inverse {
      display: none;
    }
    .container {
        margin-top: 0 !important;
    }
    </style>

  </head>
  <body>

	<div class="navbar navbar-inverse navbar-fixed-top hidden-print">
	  <div class="navbar-header">
		<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
		  <span class="icon-bar"></span>
		  <span class="icon-bar"></span>
		  <span class="icon-bar"></span>
		</button>
		<a class="navbar-brand" href="/">
		</a>
	  </div>
	  <div class="collapse navbar-collapse">
	  </div>
	</div>

	<div class="container">
      <div class="page-header" style="text-align:center; margin-top:60px;">
        <h1>Smart, automated bug hunting</h1>
        <p class="lead">
          <a href="/" class="active_nav_href" style="margin-right:50px;">Overview</a>
          <a href="/pricing" class="active_nav_href" style="margin-right:50px;">Pricing</a>
          <a href="/about" class="active_nav_href" style="margin-right:50px; color:#ccc;">More Info</a>
        </p>
      </div>

      <div class="row" style="color:#bbb">
        <div class="col-md-12" style="font-size:16px">
          <h3>Our story</h3>
          <p>We are Pierre Fenoll &amp; Romain Raine, a team with experience in backend development and software security in North America and Europe.

            <br>On a recent trip to Iceland we had the weirdest time renting a car online:
            the website was at times not finding our car and at other times just resetting our edited schedule.
            <i>We only wanted to add a day to our order!</i>

            <br>If this experience does not sound familiar, maybe you have some time in the past registered a Social Security Number in the United States?
            You may very sadly be part of the millions <a href="https://www.consumer.ftc.gov/blog/2017/09/equifax-data-breach-what-do">affected by the (repeated) mistakes of others</a>.

            <blockquote>Given the ever increasing complexity of the services we create as a community,
            we believe no one should have to compromise when testing software.</blockquote>

            <br>As software engineers we may understand the unfortunate reasons behind such lack of regards towards security protocols and testing.
            We have worked for companies where we would be spending too many stressful hours maintaining and adding features to
            a large codebase, without enough resources to bring its code coverage to calming levels (you know, even 50% would be nice).

            <br>So we set out to provide a way for companies to audit their software thoroughly while writing documentation.
            Our engine is rooted in our experience in security auditing and model-based automated testing.
          </p>

          <h3>Property-based testing</h3>
          <p>This is probably one of the most powerful software testing technique around, and its best known implementation,
            <a href="https://en.wikipedia.org/wiki/QuickCheck">QuickCheck</a>, has been around for about 20 years.
            <a href="http://nvlpubs.nist.gov/nistpubs/ir/2016/NIST.IR.8151.pdf" target="_blank">NIST recommends it in a 2016 paper</a> titled
            <i>Dramatically Reducing Software Vulnerabilities</i>.

            <br>Unlike <i>Unit Testing</i>, Property-based Testing tests <i>properties</i> of your code.
            Once you have a model of how the code should behave the engine feeds it generated data.
            As soon as the properties do not hold the failing case is shrunk into a minimal test case.

            <br>You may think of it as a subset of <a href="https://en.wikipedia.org/wiki/Fuzzing">Fuzzing</a>.

            <br>While <a href="http://hypothesis.works/articles/quickcheck-in-every-language/">such frameworks exist in most major programming languages</a> today, too few engineers learn how to write such models.
          </p>
        </div>
        <div class="col-md-12" style="font-size:16px; text-align:center">
          <b style="font-size:20px">Questions &#8594; <a href="mailto:hi@coveredci.co">hi@coveredci.co</a></b>
        </div>
      </div>
    </div>

    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-106576501-1', 'auto');
  ga('send', 'pageview');
    </script>

  </body>
</html>
